<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    <%= title %>
  </title>
  <link rel="shortcut icon" href="/images/logo-mb.png" type="image/png">
  <!-- GOOGLE FONT -->
  <link rel="preconnect" href="https://fonts.gstatic.com">
  <meta name="robots" content="noindex, nofollow">

  <!-- BOXICONS -->
  <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/4.3.0/mdb.min.css" rel="stylesheet" />
  <script src="/ckeditor/ckeditor.js"></script>
  <!-- APP CSS -->
  <link rel="stylesheet" href="/styles/grid.css">
  <link rel="stylesheet" href="/styles/dashboard.css">
  <link rel="stylesheet" href="/styles/alert.css">
  <link rel="stylesheet" href="/styles/custom_user.css">
  <link rel="stylesheet" href="/styles/style.css">
</head>

<body>
  <script type="text/x-mathjax-config">
    MathJax.Hub.Config({
            extensions: ["tex2jax.js", "TeX/AMSmath.js"],
            jax: ["input/TeX", "output/SVG"],
        });
    </script>
  <% if(user.userType==='admin' ){ %>
  <%- include('../../../sidebar/admin.ejs') %>
  <% }else if(user.userType==='teacher' ){ %>
  <%- include('../../../sidebar/teacher.ejs') %>
  <% }else if(user.userType==='moderator' ){ %>
  <%- include('../../../sidebar/moderator.ejs') %>
  <% } %>
  <%- include('../../../utils/alert.ejs') %>

  <style>
    #loading-spinner {
      position: absolute;
      top: 50%;
      left: 50%;
      height: 100%;
      z-index: 1;
    }

    .empty {
      border-color: red;
    }
  </style>
  <div id="loading-spinner" style="display:none;">
    <img src="/images/spinner.gif" alt="Loading...">
  </div>

  <div class="main-content container">
    <form action="/user/admin/questions/others<%= (qus && setContent == "true") ? '?edit=true&q_id='+qus[0].id : '' %>" method="post">
      <div class="mb-5 p-2 rounded sticky-top d-flex justify-content-end" style="background-color: antiquewhite;">
        <button type="submit" class="btn btn-success btn-sm my-1">Submit</button>
      </div>
      <!-- Text input -->
      <div class="py-4 shadow-sm">
        <div class="mb-2">
          <select name="class_id" id="class_select" class="py-2 px-4 mb-3" required style="width: 100%; outline: black">
            <% if(obj.class_id ){ %>
            <option class="py-2 px-5" value="<%= obj.class_id %>" selected><%= savedInfo.class_name ? savedInfo.class_name  : obj.class_id %></option>
            <% }else{ %>
            <option class="py-2 px-5" value="">Select Class</option>
            <% for(let s of data){ %>
            <option class="py-2 px-5" data-name="<%= s.class_name %>" value="<%= s.id %>">
              <%= s.class_name %>
            </option>
            <% } %>
            <% }%>
          </select>
        </div>
        <!-- Text input -->
        <div class="mb-2">
          <select name="subject_id" id="subject_select" class="py-2 px-4 mb-3" required style="width: 100%; outline: black">
            <% if(obj.subject_id ){ %>
            <option class="py-2 px-5" value="<%= obj.subject_id %>" selected><%= savedInfo.subject_name ? savedInfo.subject_name : obj.subject_id %></option>
            <% }else{ %>
            <option class="py-2 px-5" value="">Select Subject</option>
            <% }%>
          </select>
        </div>

        <!-- Email input -->
        <div class="mb-2">
          <select name="chapter_id" id="chapter_select" class="py-2 px-4 mb-3" required style="width: 100%; outline: black">
            <% if(obj.chapter_id){ %>
            <option class="py-2 px-5" value="<%= obj.chapter_id %>" selected><%= savedInfo.chapter_name ? savedInfo.chapter_name :obj.chapter_id %></option>
            <% }else{ %>
            <option class="py-2 px-5" value="">Select Chapter</option>
            <% }%>
          </select>
        </div>
        <% if(obj.class_id){ %>
        <a href="/user/admin/questions/creative" class="btn btn-danger my-1">Reset</a>
        <p class="fst-italic text-sm text-danger">Please do not edit this when your are edit question</p>
        <% } %>
      </div>
      <div class="d-none">
        <input type="text" name="class_name" id="class_name" value="<%= savedInfo.class_name ? savedInfo.class_name : '' %>" hidden>
        <input type="text" name="subject_name" id="subject_name" value="<%= savedInfo.subject_name ? savedInfo.subject_name : ''%>" hidden>
        <input type="text" name="chapter_name" id="chapter_name" value="<%= savedInfo.chapter_name ? savedInfo.chapter_name : '' %>" hidden>
      </div>
      <textarea id="content" name="question_text">
        <%- (qus && qus[0].question_text) && setContent == 'true'  ? qus[0].question_text : '' %>
      </textarea>

      <div class="my-5">
        <hr>
        <div class="my-3">
          <h5>Answer</h5>
          <textarea id="opt1" name="question_answer">
            <%- (qus && qus[0].question_answer) && setContent == 'true'  ? qus[0].question_answer : '' %>
          </textarea>
        </div>
      </div>

      <button type="submit" class="btn btn-<%= qus && setContent == 'true' ? 'warning' : 'primary' %> btn-block my-4"><%= qus && setContent == 'true' ? 'Update' : 'Create' %></button>
    </form>
  </div>


  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=default"></script>


  <script>
    CKEDITOR.plugins.addExternal('ckeditor_wiris', 'https://www.wiris.net/demo/plugins/ckeditor/', 'plugin.js');


    CKEDITOR.replace('content', {
      extraPlugins: 'mathjax,filebrowser',
      toolbar: [{
          name: 'document',
          items: ['Source', '-', 'NewPage', 'Preview', '-']
        },
        {
          name: 'editing',
          items: ['Find', 'Replace', '-', 'SelectAll', '-', 'Scayt']
        },
        {
          name: 'basicstyles',
          items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'CopyFormatting', 'RemoveFormat']
        },
        {
          name: 'paragraph',
          items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock']
        },
        {
          name: 'links',
          items: ['Link', 'Unlink', 'Anchor']
        },
        {
          name: 'insert',
          items: ['Image', 'Table', 'HorizontalRule', 'PageBreak', ]
        },
        '/',
        {
          name: 'styles',
          items: ['Styles', 'Format', 'Font', 'FontSize']
        },
        {
          name: 'colors',
          items: ['TextColor', 'BGColor']
        },
        {
          name: 'tools',
          items: ['Maximize']
        },
        {
          name: 'math',
          items: ['Mathjax']
        }

      ],
      mathJaxLib: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=default',
      height: 320,
      removeButtons: 'PasteFromWord',
      filebrowserBrowseUrl: '/upload/browse',
      filebrowserUploadMethod: 'form',
      filebrowserUploadUrl: '/upload',

    });

    if (CKEDITOR.env.ie && CKEDITOR.env.version == 8) {
      document.getElementById('ie8-warning').className = 'tip alert';
    }


    CKEDITOR.replace('opt1', {
      height: 80,
      toolbar: [{
          name: 'basicstyles',
          items: ['Bold', 'Italic', 'Underline', 'Strike']
        },
        {
          name: 'math',
          items: ['Mathjax']
        }
      ],
      extraPlugins: 'mathjax',
      mathJaxLib: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=default',
    });



    const class_select = document.getElementById('class_select');
    const subject_select = document.getElementById('subject_select');
    const chapter_select = document.getElementById('chapter_select');
    const loading_spinner = document.getElementById('loading-spinner');
    let classes
    class_select.addEventListener('change', async (event) => {
      loading_spinner.style.display = 'block'
      const selectedOption = event.target.options[event.target.selectedIndex];
      const className = selectedOption.getAttribute('data-name');
      if (className) {
        class_name.value = className
      }
      classes = event.target.value;
      console.log(selectedOption);
      console.log("feting...");
      let episod = await fetch(`/user/get-subject?class_id=${classes}`).then(res => res.json()).then(data => {
        loading_spinner.style.display = 'none'
        return data
      })
      subject_select.innerHTML = ''
      chapter_select.innerHTML = ''

      const option = document.createElement('option');
      option.value = ''
      option.innerHTML = 'Select Subject'
      subject_select.appendChild(option);

      for (let i = 0; i < episod.length; i++) {
        const option = document.createElement('option');
        option.value = `${episod[i].id}`;
        option.setAttribute('data-name', episod[i].subject_name);
        option.innerHTML = `${episod[i].subject_name}`;
        subject_select.appendChild(option);
      }
    });
    subject_select.addEventListener('change', async (event) => {
      loading_spinner.style.display = 'block'
      const selectedOption = event.target.options[event.target.selectedIndex];
      const className = selectedOption.getAttribute('data-name');
      if (className) {
        subject_name.value = className
      }
      var chapter = event.target.value;
      console.log("feting...");
      let episod = await fetch(`/user/get-chapter?class_id=${classes}&subject_id=${chapter}`).then(res => res.json()).then(data => {
        loading_spinner.style.display = 'none'
        return data
      })
      chapter_select.innerHTML = ''
      const option = document.createElement('option');
      option.value = ''
      option.innerHTML = 'Select Chapter'
      chapter_select.appendChild(option);
      for (let i = 0; i < episod.length; i++) {
        console.log(i);
        const option = document.createElement('option');
        option.value = `${episod[i].id}`;
        option.setAttribute('data-name', episod[i].chapter_name);
        option.innerHTML = `${episod[i].chapter_name}`;
        chapter_select.appendChild(option);
      }
    });
    chapter_select.addEventListener('change', async (event) => {
      const selectedOption = event.target.options[event.target.selectedIndex];
      const className = selectedOption.getAttribute('data-name');
      if (className) {
        chapter_name.value = className
      }
    })
  </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
  </div>
  <!-- END MAIN CONTENT -->

  <div class="overlay"></div>
  <script src="/scripts/dashboard.js"></script>
</body>

</html>